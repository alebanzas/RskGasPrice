@model GasPrice.Web.Models.IndexViewModel
@{
    ViewBag.Title = "";

    var eth = new List<string>();
    var rsk = new List<string>();
    var ethToday = new List<string>();
    var rskToday = new List<string>();
    const string template = "{{ x: new Date({1}, {2}, {3}, {4}, {5}), y: {0} }}";
    foreach (var m in Model.SummaryList)
    {
        var e = m.EthGasPriceInUsd() * 100;
        var r = m.RskGasPriceInUsd() * 100;
        eth.Add(string.Format(template, e.ToString("##.000"), m.Moment.Year, m.Moment.Month - 1, m.Moment.Day, m.Moment.Hour, m.Moment.Minute));
        rsk.Add(string.Format(template, r.ToString("##.000"), m.Moment.Year, m.Moment.Month - 1, m.Moment.Day, m.Moment.Hour, m.Moment.Minute));
    }
    foreach (var m in Model.TodayList)
    {
        var e = m.EthGasPriceInUsd() * 100;
        var r = m.RskGasPriceInUsd() * 100;
        ethToday.Add(string.Format(template, e.ToString("##.000"), m.Moment.Year, m.Moment.Month - 1, m.Moment.Day, m.Moment.Hour, m.Moment.Minute));
        rskToday.Add(string.Format(template, r.ToString("##.000"), m.Moment.Year, m.Moment.Month - 1, m.Moment.Day, m.Moment.Hour, m.Moment.Minute));
    }

    var et = Model.TodaySummary.EthGasPriceInUsd() * 100;
    var rr = Model.TodaySummary.RskGasPriceInUsd() * 100;
    var style = et > rr ? "green" : "orange";
}
@section scripts
{
    <script type="text/javascript" src="https://canvasjs.com/assets/script/jquery.canvasjs.min.js"></script>
}

<style type="text/css">
    .orange {
        color: orange;
    }

    .green {
        color: green;
    }
</style>

<h2>Now</h2>
<div class="container">
    <div class="row">
        <div class="col-sm-4">
            <div class="panel panel-default">
                <div class="panel-heading">ETH Tx Price (U$S¢)</div>
                <div class="panel-body">@(et.ToString("F3"))¢</div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="panel panel-default">
                <div class="panel-heading">RSK Tx Price (U$S¢)</div>
                <div class="panel-body">@(rr.ToString("F3"))¢</div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="panel panel-default">
                <div class="panel-heading">RSK vs ETH</div>
                <div class="panel-body @style">
                    @(et > rr ? "-" : "+")
                    @($"{Math.Abs(((et / rr) * 100)-100):F} %")
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-4">
            <div class="panel panel-default">
                <div class="panel-heading">ETH Value (USD)</div>
                <div class="panel-body">@(Model.TodaySummary.EthVsUsd.ToString("C3"))</div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="panel panel-default">
                <div class="panel-heading">BTC Value (USD)</div>
                <div class="panel-body">@(Model.TodaySummary.BtcVsUsd.ToString("C3"))</div>
            </div>
        </div>
        <div class="col-sm-4">

        </div>
    </div>
</div>

<h2>Last 14 days</h2>
<div id="summary" style="height: 400px; width: 100%;"></div>

<table id="table-summary" align="center">
    <tr>
        <th>Day</th>
        <th>ETH Tx Price</th>
        <th>RSK Tx Price</th>
        <th>Time</th>
    </tr>
    @foreach (var m in Model.SummaryList.OrderByDescending(x => x.Moment))
    {
        var met = m.EthGasPriceInUsd() * 100;
        var mrr = m.RskGasPriceInUsd() * 100;
        <tr>
            <td>@m.Moment.ToString("yy-MM-dd")</td>
            <td>@(met.ToString("F3")) ¢</td>
            <td>@(mrr.ToString("F3")) ¢</td>
            <td class="@(met > mrr ? "green" : "orange")">
                @(met > mrr ? "-" : "+")
                @($"{Math.Abs(((met / mrr) * 100)-100):F} %")
            </td>
        </tr>
    }
</table>

<h2>Today's data</h2>
<div id="today" style="height: 400px; width: 100%;"></div>

<hr/>
<p>Source: BTC & ETH Price information from <a href="http://coinmarketcap.com" target="_blank">http://coinmarketcap.com</a></p>
<p>Tx Price: A transaction that consumes 21000 gas</p>

<script>
    window.onload = function () {

        var options = {
            animationEnabled: true,
            theme: "light2",
            backgroundColor: "#102026",
            axisX: {
                valueFormatString: "DD-MM-YY"
            },
            axisY: {
                title: "Gas price in U$S ¢",
                suffix: "¢"
                //minimum: 30
            },
            toolTip: {
                shared: true
            },
            legend: {
                cursor: "pointer",
                verticalAlign: "bottom",
                horizontalAlign: "left",
                dockInsidePlotArea: true,
                itemclick: toogleDataSeries
            },
            data: [{
                    type: "line",
                    showInLegend: true,
                    name: "ETH Price",
                    markerType: "square",
                    xValueFormatString: "DD-MM-YY",
                    color: "#2364C0",
                    yValueFormatString: "#.### ¢",
                    dataPoints: [@string.Join(",", eth.ToArray())]
                },
                {
                    type: "line",
                    showInLegend: true,
                    name: "RSK Price",
                    //lineDashType: "dash",
                    color: "#119D52",
                    yValueFormatString: "#.### ¢",
                    dataPoints: [@string.Join(",", rsk.ToArray())]
                }]
        };
        $("#summary").CanvasJSChart(options);

        var optionsToday = {
            animationEnabled: true,
            theme: "light2",
            backgroundColor: "#102026",
            axisX: {
                valueFormatString: "DDD HH:mm:ss"
            },
            axisY: {
                title: "Gas price in U$S¢",
                suffix: "¢"
                //minimum: 30
            },
            toolTip: {
                shared: true
            },
            legend: {
                cursor: "pointer",
                verticalAlign: "bottom",
                horizontalAlign: "left",
                dockInsidePlotArea: true,
                itemclick: toogleDataSeries
            },
            data: [{
                    type: "line",
                    showInLegend: true,
                    name: "ETH Tx Price",
                    markerType: "square",
                    xValueFormatString: "DDD HH:mm:ss",
                    color: "#2364C0",
                yValueFormatString: "#.### ¢",
                    dataPoints: [@string.Join(",", ethToday.ToArray())]
                },
                {
                    type: "line",
                    showInLegend: true,
                    name: "RSK Tx Price",
                    //lineDashType: "dash",
                    color: "#119D52",
                    yValueFormatString: "#.### ¢",
                    dataPoints: [@string.Join(",", rskToday.ToArray())]
                }]
        };
        $("#today").CanvasJSChart(optionsToday);

        function toogleDataSeries(e) {
            if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                e.dataSeries.visible = false;
            } else {
                e.dataSeries.visible = true;
            }
            e.chart.render();
        }

    }
</script>